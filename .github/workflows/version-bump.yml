name: Auto Version Bump and Tag

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write
  pull-requests: read

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install

    - name: Install the project dependencies
      run: uv sync --all-groups

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Bump version (patch)
      id: bump-version
      run: |
        # Get current version
        CURRENT_VERSION=$(uv version)
        echo "Current version: $CURRENT_VERSION"

        # Bump patch version
        uv version --bump patch
        NEW_VERSION=$(uv version)
        echo "New version: $NEW_VERSION"

        # Update docs/conf.py to match new version
        sed -i "s/release = \"[^\"]*\"/release = \"$NEW_VERSION\"/" docs/conf.py

        # Output new version for next steps
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Commit and push version bump
      run: |
        git add pyproject.toml docs/conf.py
        git commit -m "build: bump version to ${{ steps.bump-version.outputs.new_version }}"
        git push origin main

    - name: Create and push tag
      run: |
        NEW_VERSION="${{ steps.bump-version.outputs.new_version }}"
        git tag -a "v$NEW_VERSION" -m "Release version $NEW_VERSION"
        git push origin "v$NEW_VERSION"
